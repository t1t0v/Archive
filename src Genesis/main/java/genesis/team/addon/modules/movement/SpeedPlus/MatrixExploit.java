package genesis.team.addon.modules.movement.SpeedPlus;

import meteordevelopment.meteorclient.events.world.TickEvent;
import meteordevelopment.meteorclient.mixininterface.IVec3d;
import meteordevelopment.meteorclient.utils.player.FindItemResult;
import meteordevelopment.meteorclient.utils.player.InvUtils;
import net.minecraft.item.Items;
import net.minecraft.network.packet.c2s.play.ClientCommandC2SPacket;
import net.minecraft.util.math.Vec3d;

public class MatrixExploit extends SpeedMode {
	public MatrixExploit() {
		super(SpeedModes.MatrixExploit);
	}

	@Override
	public void onActivate() {
		FindItemResult elytra = InvUtils.find(Items.ELYTRA);
		if (!elytra.found()) {
			settings.error("Elytra not found");
			settings.toggle();
		}
		else {
			tick = 0;
		}
	}

	public void startFly() {
		mc.player.networkHandler.sendPacket(new ClientCommandC2SPacket(mc.player, ClientCommandC2SPacket.Mode.START_FALL_FLYING));
	}
	int tick = 0;

	@Override
	public void onTickEventPre(TickEvent.Pre event) {
		FindItemResult elytra = InvUtils.find(Items.ELYTRA);
		if (elytra.found()) {
			if (tick == 0) {
				InvUtils.move().from(elytra.slot()).toArmor(2);
				ElytraUtils.startFly();
				ElytraUtils.startFly();
				InvUtils.move().fromArmor(2).to(elytra.slot());
				tick = 21;
			}
			else {
				tick--;
			}

			float yaw = mc.player.getYaw();
			Vec3d forward = Vec3d.fromPolar(0, yaw);
			Vec3d right = Vec3d.fromPolar(0, yaw + 90);
			double velX = 0;
			double velZ = 0;
			double s = settings.speedMatrix.get();
			double speedValue = 0.01;
			if (mc.options.forwardKey.isPressed()) {
				velX += forward.x * s * speedValue;
				velZ += forward.z * s * speedValue;
			}
			if (mc.options.backKey.isPressed()) {
				velX -= forward.x * s * speedValue;
				velZ -= forward.z * s * speedValue;
			}

			if (mc.options.rightKey.isPressed()) {
				velX += right.x * s * speedValue;
				velZ += right.z * s * speedValue;
			}
			if (mc.options.leftKey.isPressed()) {
				velX -= right.x * s * speedValue;
				velZ -= right.z * s * speedValue;
			}
			double y = mc.player.getVelocity().y;
			((IVec3d) mc.player.getVelocity()).set(velX, y, velZ);
		}
	}
}
