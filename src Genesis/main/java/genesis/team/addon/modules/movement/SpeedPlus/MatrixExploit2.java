package genesis.team.addon.modules.movement.SpeedPlus;

import meteordevelopment.meteorclient.events.world.TickEvent;
import meteordevelopment.meteorclient.mixininterface.IVec3d;
import meteordevelopment.meteorclient.utils.player.FindItemResult;
import meteordevelopment.meteorclient.utils.player.InvUtils;
import net.minecraft.client.network.ClientPlayerEntity;
import net.minecraft.item.Items;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.util.math.Vec3d;

public class MatrixExploit2 extends SpeedMode {
	public MatrixExploit2() {
		super(SpeedModes.MatrixExploit2);
	}

	@Override
	public void onActivate() {
		FindItemResult elytra = InvUtils.find(Items.ELYTRA);
		if (!elytra.found()) {
			settings.error("Elytra not found");
			settings.toggle();
		}
		else {
			ticks = 0;
		}
	}


	public void modifySpeed() {
		float yaw = mc.player.getYaw();
		Vec3d forward = Vec3d.fromPolar(0, yaw);
		Vec3d right = Vec3d.fromPolar(0, yaw + 90);
		double velX = 0;
		double velZ = 0;
		double s = settings.speedMatrix.get();
		double speedValue = 0.01;
		if (mc.options.forwardKey.isPressed()) {
			velX += forward.x * s * speedValue;
			velZ += forward.z * s * speedValue;
		}
		if (mc.options.backKey.isPressed()) {
			velX -= forward.x * s * speedValue;
			velZ -= forward.z * s * speedValue;
		}

		if (mc.options.rightKey.isPressed()) {
			velX += right.x * s * speedValue;
			velZ += right.z * s * speedValue;
		}
		if (mc.options.leftKey.isPressed()) {
			velX -= right.x * s * speedValue;
			velZ -= right.z * s * speedValue;
		}
		double y = mc.player.getVelocity().y;
		((IVec3d) mc.player.getVelocity()).set(velX, y, velZ);
	}
	private int ticks = 0;
	private int slot = 0;
	@Override
	public void onTickEventPre(TickEvent.Pre event) {
		ClientPlayerEntity player = mc.player;
		assert player != null;
		switch (ticks) {
			case 0: {
				FindItemResult elytra = InvUtils.find(Items.ELYTRA);
				slot = elytra.slot();
				//InvUtils.quickMove().from(slot).toArmor(2);
				InvUtils.move().from(slot).toArmor(2);
				ticks++;
			}
			case 1: {
				if (mc.player.isOnGround())
					mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.OnGroundOnly(false));
				ticks++;
			}
			case 2: {
				if (mc.player.isOnGround())
					mc.player.networkHandler.sendPacket(new PlayerMoveC2SPacket.OnGroundOnly(false));
				ticks++;
			}
			case 3: {
				ElytraUtils.startFly();
				ticks++;
			}
			case 4: {
				modifySpeed();
				ticks++;
			}
			case 5: {
				ElytraUtils.startFly();
				modifySpeed();
				ticks++;
			}
			case 6: {
				//InvUtils.quickMove().from(2).toArmor(slot);
				InvUtils.move().fromArmor(2).to(slot);
				modifySpeed();
				ticks++;
			}
			default: {
				if (ticks >= 13 && ticks <= 16) {
					ticks++;
					modifySpeed();
				}
				else if (ticks <= 16) {
					ticks++;
					modifySpeed();
				}
				else {
					ticks = 0;
				}
			}
		}
	}
}
